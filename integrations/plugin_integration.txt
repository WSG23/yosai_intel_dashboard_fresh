# integration/plugin_integration.py
"""
Integration instructions for adding the JSON Serialization Plugin to your app
"""

print("""
 JSON SERIALIZATION PLUGIN INTEGRATION

Step 1: Update your core/app_factory.py
======================================

# Add after your existing container creation:

from core.plugins.manager import PluginManager

# Create container with YAML config (your existing code)
config_manager = get_config()
container = get_configured_container_with_yaml(config_manager)

# NEW: Add plugin manager
plugin_manager = PluginManager(container, config_manager)

# Load all plugins
plugin_results = plugin_manager.load_all_plugins()
logger.info(f"Loaded plugins: {plugin_results}")

# Store plugin manager in app for callback registration
app._yosai_plugin_manager = plugin_manager

# In your callback registration section, add:
plugin_callback_results = plugin_manager.register_plugin_callbacks(app)
logger.info(f"Registered plugin callbacks: {plugin_callback_results}")


Step 2: Update your config/config.yaml
======================================

# Add this section to your existing config.yaml:

plugins:
  json_serialization:
    enabled: true
    max_dataframe_rows: 1000
    max_string_length: 10000
    include_type_metadata: true
    compress_large_objects: true
    fallback_to_repr: true
    auto_wrap_callbacks: true


Step 3: Use the plugin in your callbacks
========================================

# In your pages/deep_analytics.py or any callback file:

from core.plugins.decorators import safe_callback

@app.callback(...)
@safe_callback(app)  # This now uses the plugin automatically!
@role_required("admin")
def your_callback_function(inputs...):
    # Your existing logic
    # All outputs are now automatically JSON-safe
    return some_dataframe, some_function, some_complex_object


Step 4: Test the plugin
======================

# Run the plugin tests:
python -m pytest tests/test_json_serialization_plugin.py -v

# Start your app:
python3 app.py

# The JSON serialization errors should be completely gone!


Step 5: Monitor plugin health
============================

# Add this endpoint to monitor plugin health:

@server.route("/health/plugins")
def plugin_health():
    if hasattr(app, '_yosai_plugin_manager'):
        health = app._yosai_plugin_manager.get_plugin_health()
        return jsonify(health)
    return jsonify({"error": "Plugin manager not available"})

