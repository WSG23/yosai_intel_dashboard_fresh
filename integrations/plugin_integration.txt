# integration/plugin_integration.py
"""
Updated integration guide for the plugin system using the unified registry.
"""

print("""
ðŸ”Œ PLUGIN INTEGRATION WITH UNIFIED REGISTRY

Step 1: Enable the PluginManager
================================

from core.plugins.manager import PluginManager
from core.callback_registry import CallbackRegistry

config_manager = get_config()
container = get_configured_container_with_yaml(config_manager)

# Create registry and manager
registry = CallbackRegistry(app)
plugin_manager = PluginManager(container, config_manager, registry)

# Load and start plugins
plugin_manager.load_all_plugins()
plugin_manager.register_plugin_callbacks(app)

# The manager now exposes a unified registry for callbacks and automatically
# serves aggregated health information at /health/plugins.

Step 2: Configure plugins in plugins.yaml
=========================================

# core/plugins/config/plugins.yaml
plugins:
  json_serialization:
    enabled: true
    max_dataframe_rows: 1000
    max_string_length: 10000
    include_type_metadata: true
    compress_large_objects: true
    fallback_to_repr: true
  hello_world:
    enabled: false
""")

print("""
Step 3: Use ComponentPluginAdapter
==================================

from core.plugins.adapter import ComponentPluginAdapter
from core.plugins.decorators import unified_callback

class ExampleComponent(ComponentPluginAdapter):
    def layout(self):
        return html.Div(id="example-div")

    @unified_callback(Output("example-div", "children"), Input("trigger", "n_clicks"))
    def update_div(self, _):
        return "updated"
""")
