Integration instructions for adding the JSON Serialization Plugin to your app

ðŸ”Œ JSON SERIALIZATION PLUGIN INTEGRATION

Step 1: Update your core/app_factory.py
=======================================

# Add after your existing container creation:

from core.plugins.auto_config import setup_plugins

# Create container with YAML config (your existing code)
config_manager = get_config()
container = get_configured_container_with_yaml(config_manager)

# NEW: Setup plugins with automatic discovery
registry = setup_plugins(app, container=container, config_manager=config_manager)
app._yosai_plugin_manager = registry.plugin_manager

Step 2: Update your config/config.yaml
======================================

# Reference the shared plugin configuration:

plugins: !include plugins.yaml

Step 3: Use the plugin in your callbacks
========================================

# In your pages/deep_analytics.py or any callback file:

from core.plugins.decorators import safe_callback

@app.callback(...)
@safe_callback(app)  # This now uses the plugin automatically!
@role_required("admin")
def your_callback_function(inputs...):
    # Your existing logic
    # All outputs are now automatically JSON-safe
    return some_dataframe, some_function, some_complex_object

Step 4: Test the plugin
=======================

# Run the plugin tests:
python -m pytest tests/test_json_serialization_plugin.py -v

# Start your app:
python3 app.py

# The JSON serialization errors should be completely gone!

Step 5: Monitor plugin health
=============================

The health endpoint is now registered automatically at `/health/plugins`.
Simply visit that URL to view the current plugin status.
