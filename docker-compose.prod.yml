version: '3.8'

services:

  service-registry:
    image: consul:1.15
    command: consul agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
    restart: unless-stopped

  analytics-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "-m", "uvicorn", "services.analytics_microservice.app:app", "--host", "0.0.0.0", "--port", "8001"]
    environment:
      YOSAI_ENV: production
      SERVICE_REGISTRY_URL: http://service-registry:8500
    depends_on:
      - service-registry
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "8081:8080"
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8080"
      - "prometheus.path=/metrics"
    environment:
      SERVICE_REGISTRY_URL: http://service-registry:8500
    depends_on:
      - analytics-service
      - service-registry
    restart: unless-stopped
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: yosai_intel
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password.txt
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_setup.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
    secrets:
      - db_password

  pgbouncer:
    image: edoburu/pgbouncer:1.21.0
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD_FILE: /run/secrets/db_password.txt
      POOL_MODE: session
    ports:
      - "6432:6432"
    depends_on:
      - db
    restart: unless-stopped
    secrets:
      - db_password

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

secrets:
  db_password:
    file: secrets/db_password.txt
  secret_key:
    file: secrets/secret_key.txt
