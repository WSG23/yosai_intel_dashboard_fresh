version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
      YOSAI_ENV: production
      DB_TYPE: postgresql
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: yosai_intel
      DB_USER: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8050:8050"
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8050"
      - "prometheus.path=/metrics"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    secrets:
      - secret_key
      - db_password

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: yosai_intel
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password.txt
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_setup.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
    secrets:
      - db_password

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

secrets:
  db_password:
    file: secrets/db_password.txt
  secret_key:
    file: secrets/secret_key.txt
