apiVersion: apps/v1
kind: Deployment
metadata:
  name: yosai-dashboard
  labels:
    app: yosai-dashboard
    track: stable
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: yosai-dashboard
      track: stable
  template:
    metadata:
      labels:
        app: yosai-dashboard
        track: stable
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8050"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: setup-symlinks
          image: yosai-intel-dashboard:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          command: ["python", "scripts/create_symlinks.py"]
      containers:
        - name: yosai-dashboard
          image: yosai-intel-dashboard:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8050
          env:
            - name: YOSAI_ENV
              value: "production"
            - name: DB_TYPE
              value: "postgresql"
            - name: DB_HOST
              value: "pgbouncer"
            - name: DB_PORT
              value: "6432"
            - name: DB_NAME
              value: "yosai_intel"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: VAULT_ADDR
              valueFrom:
                configMapKeyRef:
                  name: vault-config
                  key: VAULT_ADDR
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault-secret
                  key: VAULT_TOKEN
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
            - name: PYTHONPATH
              value: "/app:/app/yosai_intel_dashboard/src"
            - name: ENABLE_LEGACY_IMPORTS
              valueFrom:
                configMapKeyRef:
                  name: dashboard-config
                  key: ENABLE_LEGACY_IMPORTS
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8050
            initialDelaySeconds: 10
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8050
            initialDelaySeconds: 20
            periodSeconds: 20
          startupProbe:
            httpGet:
              path: /health/startup
              port: 8050
            failureThreshold: 30
            periodSeconds: 10
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
