version: '3.8'

services:
  app:
    extends:
      file: docker-compose.yml
      service: app
    environment:
      YOSAI_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      SERVICE_DISCOVERY_URL: http://api-gateway
    depends_on:
      - postgres
      - timescaledb
      - kafka1
      - kafka2
      - kafka3

  postgres:
    extends:
      file: docker-compose.yml
      service: postgres

  timescaledb:
    image: timescale/timescaledb:2.13.0-pg15
    environment:
      POSTGRES_DB: yosai_intel
      POSTGRES_USER: postgres
    secrets:
      - db_password
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./scripts/init_timescaledb.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
      - timescaledb
    restart: unless-stopped

  api-gateway:
    image: nginx:1.25
    volumes:
      - ./nginx/dev_gateway.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8081:80"
    environment:
      APP_HOST: app
      APP_PORT: 8050
    depends_on:
      - app
    restart: unless-stopped

  zookeeper1:
    extends:
      file: docker-compose.kafka.yml
      service: zookeeper1

  zookeeper2:
    extends:
      file: docker-compose.kafka.yml
      service: zookeeper2

  zookeeper3:
    extends:
      file: docker-compose.kafka.yml
      service: zookeeper3

  kafka1:
    extends:
      file: docker-compose.kafka.yml
      service: kafka1

  kafka2:
    extends:
      file: docker-compose.kafka.yml
      service: kafka2

  kafka3:
    extends:
      file: docker-compose.kafka.yml
      service: kafka3

  schema-registry:
    extends:
      file: docker-compose.kafka.yml
      service: schema-registry

  connect:
    extends:
      file: docker-compose.kafka.yml
      service: connect

  kafka-manager:
    extends:
      file: docker-compose.kafka.yml
      service: kafka-manager

  kafka-ui:
    extends:
      file: docker-compose.kafka.yml
      service: kafka-ui

volumes:
  timescaledb_data:
  pgadmin_data:

secrets:
  db_password:
    file: ./secrets/db_password
