name: Microservices CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      microservices_changed: ${{ steps.filter.outputs.microservices }}
    steps:
      - uses: actions/checkout@v3
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            microservices:
              - 'services/**'
              - 'k8s/**'
              - 'Dockerfile*'
              - '.github/workflows/microservices-ci-cd.yml'

  test:
    needs: detect-changes
    if: needs.detect-changes.outputs.microservices_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install -r requirements.lock -r requirements-test.txt
      - run: pytest -q

  security-scan:
    needs: test
    if: needs.detect-changes.outputs.microservices_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@v0.12.0
        with:
          scan-type: filesystem
          format: table
          ignore-unfixed: true
          exit-code: 0
          path: .

  build-image:
    needs: security-scan
    if: needs.detect-changes.outputs.microservices_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}

  validate-manifests:
    needs: build-image
    if: needs.detect-changes.outputs.microservices_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Validate manifests
        run: |
          kubectl apply --dry-run=client -f k8s/base
          kubectl apply --dry-run=client -f k8s/production

  deploy:
    needs: validate-manifests
    if: github.ref == 'refs/heads/main' && needs.detect-changes.outputs.microservices_changed == 'true'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Configure kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > "$HOME/.kube/config"
      - name: Deploy to cluster
        run: |
          kubectl apply -f k8s/base
          kubectl apply -f k8s/production
