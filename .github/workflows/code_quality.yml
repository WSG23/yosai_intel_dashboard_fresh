name: code-quality

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  security-events: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      # --- Node toolchain for frontend lint/tests ---
      - name: Set up Node 20
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Node deps (CI-safe)
        env:
          NPM_CONFIG_LEGACY_PEER_DEPS: "true"
        run: |
          npm ci --no-audit --prefer-offline
      # --- Python toolchain for lint/tests ---
      - name: Set up Python 3.11
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install Python deps (prefer wheels)
        env:
          PIP_PREFER_BINARY: "1"
          PIP_ONLY_BINARY: ":all:"
        run: |
          python -m pip install -U pip setuptools wheel
          pip install 'numpy>=1.23,<2.0'
          pip install -r requirements.txt || pip install --no-build-isolation -r requirements.txt
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt || pip install --no-build-isolation -r requirements-dev.txt
          fi
      # Collect logs if anything above fails
      - name: Upload npm/pip logs (always)
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: ci-logs-code_quality
          path: |
            ~/.npm/_logs/**
            ~/.cache/pip/log/debug.log
          if-no-files-found: ignore
      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      - name: ShellCheck
        run: |
          set -euo pipefail
          mapfile -t files < <(git ls-files '*.sh')
          if [ "${#files[@]}" -gt 0 ]; then shellcheck -x "${files[@]}"; else echo "No shell scripts found."; fi
      - name: Pre-commit
        run: pre-commit run --all-files
      - name: Bandit
        run: bandit -r src yosai_intel_dashboard/src -ll
      - name: Dependency check
        env:
          PYTHONPATH: yosai_intel_dashboard/src
        run: python -m yosai_intel_dashboard.src.utils.dependency_checker
      - name: Lint JS
        run: npm run lint
      - name: Test
        env:
          PYTHONPATH: yosai_intel_dashboard/src
        run: pytest -q
