name: code-quality

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  security-events: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          [ -f requirements-dev.txt ] && pip install -r requirements-dev.txt || true
          if [ -f package-lock.json ]; then
            npm ci
          elif [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile
          elif [ -f yarn.lock ]; then
            yarn --frozen-lockfile
          fi
      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      - name: ShellCheck
        run: |
          set -euo pipefail
          mapfile -t files < <(git ls-files '*.sh')
          if [ "${#files[@]}" -gt 0 ]; then shellcheck -x "${files[@]}"; else echo "No shell scripts found."; fi
      - name: Lint
        run: |
          black . --check
          isort . --check-only
          flake8 .
          npm run lint
      - name: Test
        env:
          PYTHONPATH: yosai_intel_dashboard/src
        run: pytest -q
