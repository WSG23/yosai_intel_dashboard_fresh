name: CI/CD

env:
  PYTHONPATH: "${{ github.workspace }}:/yosai_intel_dashboard/src"

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  clean-arch-check:
    runs-on: ubuntu-latest
    env:
      PIP_CACHE_DIR: ~/.cache/pip
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - run: pip install -r requirements.txt
      - run: python scripts/create_symlinks.py
      - run: python scripts/validate_structure.py
      - run: python scripts/verify_imports.py

  tests:
    runs-on: ubuntu-latest
    needs: clean-arch-check
    strategy:
      fail-fast: false
      matrix:
        job: [python, go, migration]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Create symlinks
        run: python scripts/create_symlinks.py
      - name: Set up Go
        if: matrix.job == 'go'
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Install Python deps
        if: matrix.job == 'python' || matrix.job == 'migration'
        run: |
          pip install -r requirements.lock
          pip install -r requirements-test.txt
      - name: Run Python tests
        if: matrix.job == 'python'
        run: |
          pytest --cov=./ --cov-report=xml -q
      - name: Upload coverage
        if: matrix.job == 'python'
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: coverage.xml
      - name: Upload coverage to Codecov
        if: matrix.job == 'python'
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
      - name: Run Go tests (gateway)
        if: matrix.job == 'go'
        working-directory: ./gateway
        run: go test ./...
      - name: Run Go tests (registry)
        if: matrix.job == 'go'
        working-directory: ./gateway
        run: go test ./internal/registry
      - name: Run Go tests (tests)
        if: matrix.job == 'go'
        working-directory: ./tests
        run: go test ./...
      - name: Run migration tests
        if: matrix.job == 'migration'
        run: pytest tests/migration tests/test_migrations.py tests/integration/test_timescale.py -q
      - name: Alembic upgrade check
        if: matrix.job == 'migration'
        run: alembic -c database/migrations/alembic.ini upgrade head
      - name: Timescale upgrade check
        if: matrix.job == 'migration'
        run: alembic -c migrations/timescale/alembic.ini upgrade head
      - name: Compile replication script
        if: matrix.job == 'migration'
        run: python -m py_compile scripts/replicate_to_timescale.py
      - name: Test Timescale migration
        if: matrix.job == 'migration'
        run: python scripts/migrate_to_timescale.py --test-mode
      - name: Verify Timescale migration
        if: matrix.job == 'migration'
        run: python scripts/verify_timescale_migration.py
  container-build:
    runs-on: ubuntu-latest
    needs: [clean-arch-check, tests]
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - name: gateway
            context: .
            dockerfile: Dockerfile.gateway
          - name: analytics
            context: .
            dockerfile: Dockerfile
          - name: event-ingestion
            context: ./services/event-ingestion
            dockerfile: Dockerfile
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: python scripts/create_symlinks.py
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Determine image tag
        id: vars
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=sha-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
          fi
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          dockerfile: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-${{ matrix.name }}:latest
            ghcr.io/${{ github.repository }}-${{ matrix.name }}:${{ steps.vars.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release-image:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [clean-arch-check, tests, container-build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: python scripts/create_symlinks.py
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push release image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

