name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHONPATH: "${{ github.workspace }}:${{ github.workspace }}/src:${{ github.workspace }}/yosai_intel_dashboard:${{ github.workspace }}/yosai_intel_dashboard/src"

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run pytest
        run: pytest

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 20
          cache: "npm"
      - name: Install npm dependencies
        run: npm ci
      - name: Run frontend tests
        run: npm test -- --watchAll=false

  lint-test:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run flake8
        run: flake8 .
      - name: Run SQL linter
        run: python tools/check_execute_query.py

  build-test:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Build images
        run: |
          docker compose \
            -f docker-compose.yml \
            -f docker-compose.kafka.yml \
            build

  hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Install hadolint
        run: |
          curl -sL https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o hadolint
          chmod +x hadolint
          sudo mv hadolint /usr/local/bin/hadolint
      - name: Run hadolint
        run: |
          for file in $(git ls-files '*Dockerfile*'); do
            echo "Linting $file"
            hadolint --config infra/.hadolint.yaml "$file"
          done

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run integration tests
        run: |
          if ! docker info >/dev/null 2>&1; then
            echo "Docker not available - skipping integration tests."
            exit 0
          fi
          pytest tests/integration

  security-scans:
    name: Dependency and Vulnerability Scan
    needs:
      - backend-tests
      - frontend-tests
      - lint-test
      - build-test
      - hadolint
      - integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Dependency Review
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/dependency-review-action@fa6368072a20f00d241e99c93d82db12512ca42d
        with:
          fail-on-severity: critical
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.11.2
        with:
          scan-type: fs
          severity: CRITICAL
          exit-code: '1'
