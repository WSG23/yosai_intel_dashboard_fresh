name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHONPATH: "${{ github.workspace }}:${{ github.workspace }}/src:${{ github.workspace }}/yosai_intel_dashboard:${{ github.workspace }}/yosai_intel_dashboard/src"

jobs:
  build-test:
    name: Build Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - context: .
            dockerfile: Dockerfile
          - context: .
            dockerfile: Dockerfile.gateway
          - context: .
            dockerfile: Dockerfile.model-serving
          - context: dashboard
            dockerfile: dashboard/Dockerfile
          - context: services/api
            dockerfile: services/api/Dockerfile
          - context: yosai_intel_dashboard/src/services/event_processing
            dockerfile: yosai_intel_dashboard/src/services/event_processing/Dockerfile
          - context: yosai_intel_dashboard/src/services/event-ingestion
            dockerfile: yosai_intel_dashboard/src/services/event-ingestion/Dockerfile
          - context: yosai_intel_dashboard/src/adapters/api
            dockerfile: yosai_intel_dashboard/src/adapters/api/Dockerfile
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - uses: docker/setup-buildx-action@v3
      - name: Build image
        run: docker build -f ${{ matrix.dockerfile }} ${{ matrix.context }}

  python-lint:
    name: Python Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Black
        run: |
          set -o pipefail
          black --check . | tee black-report.txt
      - name: Ruff
        run: |
          set -o pipefail
          ruff check . | tee ruff-report.txt
      - name: Mypy
        run: |
          set -o pipefail
          mypy . --strict | tee mypy-report.txt
      - name: Upload lint reports
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: python-lint
          path: |
            black-report.txt
            ruff-report.txt
            mypy-report.txt

  schema-version:
    name: Schema Version Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Validate schema version bumps
        run: python scripts/check_schema_versions.py

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
      - name: Detect hardcoded secrets
        run: |
          pip install detect-secrets
          detect-secrets-hook --baseline .secrets.baseline
      - name: Run secret scan
        run: |
          export SECRET_KEY=$(python -c 'import secrets; print(secrets.token_hex(32))')
          export DB_PASSWORD=$(python -c 'import secrets; print(secrets.token_hex(32))')
          export AUTH0_CLIENT_SECRET=$(python -c 'import secrets; print(secrets.token_hex(32))')
          python scripts/security_scan_secrets.py
      - name: Upload secrets scan report
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: secrets-scan
          path: security_secrets_scan.json

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run pytest
        run: |
          set -o pipefail
          pytest -W error -m "not slow" --cov=. --cov-report=xml --cov-report=term | tee pytest-report.txt
      - name: Upload coverage
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: backend-coverage
          path: |
            coverage.xml
            pytest-report.txt

  slow-tests:
    name: Slow Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run slow tests
        run: |
          set -o pipefail
          pytest -W error -m slow --cov=. --cov-report=xml --cov-report=term | tee pytest-report.txt
      - name: Upload coverage
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: slow-coverage
          path: |
            coverage.xml
            pytest-report.txt

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 20
          cache: "npm"
      - name: Install npm dependencies
        run: npm ci
      - name: Install stylelint
        run: npm install --no-save stylelint stylelint-config-standard
      - name: ESLint
        run: |
          set -o pipefail
          npm run lint -- --max-warnings=0 | tee eslint-report.txt
      - name: Prettier
        run: |
          set -o pipefail
          npx prettier --check . | tee prettier-report.txt
      - name: Stylelint
        run: |
          set -o pipefail
          npx stylelint "**/*.{css,scss}" --max-warnings=0 | tee stylelint-report.txt
      - name: Run frontend tests
        run: |
          set -o pipefail
          npm test -- --coverage | tee frontend-test.log
      - name: Upload frontend artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: frontend-artifacts
          path: |
            eslint-report.txt
            prettier-report.txt
            stylelint-report.txt
            frontend-test.log
            coverage

  golangci:

    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: stable
      - name: GolangCI-Lint
        uses: golangci/golangci-lint-action@25e2cdc5eb1d7a04fdc45ff538f1a00e960ae128
        with:
          args: --out-format=checkstyle --out=golangci-lint.xml --timeout=5m --max-issues-per-linter=0 --max-same-issues=0
      - name: Upload golangci-lint report
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: golangci-lint
          path: golangci-lint.xml

  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
      - name: Run ShellCheck
        run: |
          set -o pipefail
          files=$(git ls-files '*.sh')
          if [ -n "$files" ]; then
            shellcheck --severity=warning -x $files | tee shellcheck-report.txt
          else
            echo "No shell scripts found" | tee shellcheck-report.txt
          fi
      - name: Upload shellcheck report

        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: shellcheck-report
          path: shellcheck-report.txt

  hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Install hadolint
        run: |
          curl -sL https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o hadolint
          chmod +x hadolint
          sudo mv hadolint /usr/local/bin/hadolint
      - name: Run hadolint
        run: |
          set -o pipefail
          for file in $(git ls-files '*Dockerfile*'); do
            echo "Linting $file" | tee -a hadolint-report.txt
            hadolint --config infra/.hadolint.yaml --failure-threshold warning "$file" | tee -a hadolint-report.txt
          done
      - name: Upload hadolint report
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: hadolint-report
          path: hadolint-report.txt

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run integration tests
        run: |
          set -euo pipefail
          if ! docker info >/dev/null 2>&1; then
            echo "Docker not available - skipping integration tests." | tee integration-report.txt
            exit 0
          fi
          pytest tests/integration -W error | tee integration-report.txt
      - name: Upload integration report
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: integration-report
          path: integration-report.txt

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt locust
      - name: Run performance tests
        run: |
          set -o pipefail
          pytest tests/performance --override-ini="addopts=" -W error | tee performance-report.txt
      - name: Upload performance report
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: performance-report
          path: performance-report.txt

  audits:
    name: Audits
    needs:
      - backend-tests
      - frontend-tests
      - python-lint
      - golangci
      - shellcheck
      - hadolint
      - build-test
      - integration
      - performance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Dependency Review
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/dependency-review-action@fa6368072a20f00d241e99c93d82db12512ca42d
        with:
          fail-on-severity: critical
      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.11.2
        with:
          scan-type: fs
          severity: CRITICAL
          exit-code: '1'
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.11'
      - name: pip-audit
        run: |
          set -o pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt pip-audit
          pip-audit | tee pip-audit.txt
      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 20
      - name: npm audit
        run: |
          set -o pipefail
          npm ci --no-audit
          npm audit --audit-level=high | tee npm-audit.txt

      - name: Upload audit reports
        if: ${{ always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: audit-reports
          path: |
            pip-audit.txt
            npm-audit.txt
  sdk-generation:
    name: OpenAPI SDK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: 20
      - name: Validate spec and SDKs
        run: |
          npx --yes @openapitools/openapi-generator-cli validate -i yosai_intel_dashboard/src/adapters/api/openapi/yosai-api-v2.yaml
          npx --yes @openapitools/openapi-generator-cli generate -i yosai_intel_dashboard/src/adapters/api/openapi/yosai-api-v2.yaml -g typescript-fetch -o sdks/typescript
          npx --yes @openapitools/openapi-generator-cli generate -i yosai_intel_dashboard/src/adapters/api/openapi/yosai-api-v2.yaml -g go -o sdks/go
          git diff --exit-code
