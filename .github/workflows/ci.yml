name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install deps
        env:
          PIP_CACHE_DIR: ~/.cache/pip
        run: |
          set -xe
          pip install -r requirements.lock
          pip install -r requirements-test.txt
      - name: Generate OpenAPI spec
        working-directory: ./api/openapi
        run: go run .
      - name: Generate client SDKs
        run: ./scripts/generate_clients.sh
      - name: Check generated clients up to date
        run: git diff --exit-code docs/openapi.json analytics/clients/event_client pkg/eventclient
      - name: Upload OpenAPI
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: docs/openapi.json
      - name: Black
        run: |
          set -xe
          black --check . --line-length 88 --verbose
      - name: Flake8
        run: |
          set -xe
          flake8 . --max-line-length 88 -v

      - name: Mypy
        run: |
          set -xe
          mypy .

      - name: Avro schema compatibility
        run: |
          set -xe
          python scripts/check_schema_compatibility.py

      - name: Bandit
        run: |
          set -xe
          bandit -r . --severity-level high

      - name: Safety
        run: |
          set -xe
          safety check -r requirements.lock -r requirements-dev.txt --full-report

      - name: Pip Audit
        if: github.event_name == 'pull_request'
        run: |
          set -xe
          pip-audit -r requirements.lock -r requirements-dev.txt \
            --format=json --output=audit-report.json

      - name: Isort
        run: |
          set -xe
          isort --check .

      - name: Organize imports
        run: |
          set -xe
          python tools/organize_imports.py --check

      - name: PyTest
        run: |
          set -xe
          LIGHTWEIGHT_SERVICES=1 pytest --maxfail=1 --disable-warnings -q --cov=. --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
      - name: Go Coverage
        run: |
          set -xe
          ./scripts/test-coverage.sh
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Node deps
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Jest Tests
        run: npm test -- --watchAll=false
      - name: Cypress Tests
        run: npx cypress run
      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: audit-report.json
