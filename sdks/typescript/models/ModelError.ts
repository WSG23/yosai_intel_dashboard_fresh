/* tslint:disable */
/* eslint-disable */
/**
 * Y≈çsai Intel Dashboard API
 * Physical security intelligence and access control API.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ModelError
 */
export interface ModelError {
  /**
   *
   * @type {string}
   * @memberof ModelError
   */
  code: ModelErrorCodeEnum;
  /**
   *
   * @type {string}
   * @memberof ModelError
   */
  message: string;
  /**
   * Additional error details
   * @type {any}
   * @memberof ModelError
   */
  details?: any | null;
}

/**
 * @export
 */
export const ModelErrorCodeEnum = {
  InvalidInput: 'invalid_input',
  Unauthorized: 'unauthorized',
  NotFound: 'not_found',
  Internal: 'internal',
  Unavailable: 'unavailable',
} as const;
export type ModelErrorCodeEnum =
  (typeof ModelErrorCodeEnum)[keyof typeof ModelErrorCodeEnum];

/**
 * Check if a given object implements the ModelError interface.
 */
export function instanceOfModelError(value: object): value is ModelError {
  if (!('code' in value) || value['code'] === undefined) return false;
  if (!('message' in value) || value['message'] === undefined) return false;
  return true;
}

export function ModelErrorFromJSON(json: any): ModelError {
  return ModelErrorFromJSONTyped(json, false);
}

export function ModelErrorFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ModelError {
  if (json == null) {
    return json;
  }
  return {
    code: json['code'],
    message: json['message'],
    details: json['details'] == null ? undefined : json['details'],
  };
}

export function ModelErrorToJSON(json: any): ModelError {
  return ModelErrorToJSONTyped(json, false);
}

export function ModelErrorToJSONTyped(
  value?: ModelError | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    code: value['code'],
    message: value['message'],
    details: value['details'],
  };
}
