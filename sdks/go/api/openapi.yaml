components:
  schemas:
    Error:
      properties:
        code:
          enum:
          - invalid_input
          - unauthorized
          - not_found
          - internal
          - unavailable
          type: string
        details:
          description: Additional error details
          nullable: true
        message:
          type: string
      required:
      - code
      - message
      type: object
  securitySchemes:
    csrfToken:
      in: header
      name: X-CSRF-Token
      type: apiKey
    jwtAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: 'Physical security intelligence and access control API.

    '
  title: "Y\u014Dsai Intel Dashboard API"
  version: 1.0.0
openapi: 3.0.3
paths:
  /analytics/chart/{chart_type}:
    get:
      operationId: getChartData
      parameters:
      - in: path
        name: chart_type
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Chart data
      summary: Retrieve chart data
  /analytics/health:
    get:
      operationId: analyticsHealth
      responses:
        '200':
          description: Health status
      summary: Analytics service health
  /analytics/patterns:
    get:
      operationId: getPatterns
      responses:
        '200':
          description: Analytics summary
      summary: Summarize access patterns
  /analytics/sources:
    get:
      operationId: getSources
      responses:
        '200':
          description: Data sources
      summary: List data sources
  /csrf-token:
    get:
      operationId: getCsrfToken
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  csrf_token:
                    type: string
                type: object
          description: CSRF token
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Rate limit exceeded
      summary: Get CSRF token
  /explanations/{prediction_id}:
    get:
      operationId: getExplanation
      parameters:
      - in: path
        name: prediction_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Explanation payload
      summary: Get prediction explanation
  /feature-flags:
    get:
      operationId: listFeatureFlags
      responses:
        '200':
          description: Flags
      summary: List feature flags
    post:
      operationId: createFeatureFlag
      responses:
        '201':
          description: Created
      summary: Create feature flag
  /feature-flags/{name}:
    delete:
      operationId: deleteFeatureFlag
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Deleted
      summary: Delete feature flag
    get:
      operationId: getFeatureFlag
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Flag
      summary: Get feature flag
    put:
      operationId: updateFeatureFlag
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Updated flag
      summary: Update feature flag
  /feature-flags/{name}/audit:
    get:
      operationId: getFeatureFlagAudit
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Audit history
      summary: Get feature flag audit history
  /model-monitoring/{model_name}:
    get:
      operationId: getModelMonitoringEvents
      parameters:
      - in: path
        name: model_name
        required: true
        schema:
          type: string
      - in: query
        name: start
        schema:
          format: date-time
          type: string
      - in: query
        name: end
        schema:
          format: date-time
          type: string
      responses:
        '200':
          description: Monitoring events
      summary: Get model monitoring events
  /settings:
    get:
      operationId: getSettings
      responses:
        '200':
          description: Successful response
      summary: Get user settings
    post:
      operationId: updateSettings
      responses:
        '200':
          description: Successful response
      summary: Update user settings
  /token/refresh:
    post:
      operationId: refreshToken
      responses:
        '200':
          description: New access token
      summary: Refresh access token
  /upload:
    post:
      operationId: uploadFile
      responses:
        '200':
          description: Upload result
      summary: Upload a file
security:
- jwtAuth: []
- csrfToken: []
servers:
- description: Production
  url: https://api.yosai.com/v1
- description: Staging
  url: https://staging-api.yosai.com/v1
- description: Development
  url: http://localhost:8080/v1
