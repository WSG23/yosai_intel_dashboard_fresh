# coding: utf-8

"""
    Access Event Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_v1_events_batch_post_request import ApiV1EventsBatchPostRequest

class TestApiV1EventsBatchPostRequest(unittest.TestCase):
    """ApiV1EventsBatchPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiV1EventsBatchPostRequest:
        """Test ApiV1EventsBatchPostRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiV1EventsBatchPostRequest`
        """
        model = ApiV1EventsBatchPostRequest()
        if include_optional:
            return ApiV1EventsBatchPostRequest(
                events = [
                    openapi_client.models.access_event.AccessEvent(
                        event_id = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        person_id = '', 
                        door_id = '', 
                        badge_id = '', 
                        access_result = '', 
                        badge_status = '', 
                        door_held_open_time = 1.337, 
                        entry_without_badge = True, 
                        device_status = '', )
                    ]
            )
        else:
            return ApiV1EventsBatchPostRequest(
        )
        """

    def testApiV1EventsBatchPostRequest(self):
        """Test ApiV1EventsBatchPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
