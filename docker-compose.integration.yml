version: '3.8'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dashboard
    ports:
      - '5432:5432'
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  analytics-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: ['python', '-m', 'uvicorn', 'services.analytics_microservice.app:app', '--host', '0.0.0.0', '--port', '8001']
    environment:
      YOSAI_ENV: test
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: dashboard
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    ports:
      - '8001:8001'
  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    environment:
      YOSAI_ENV: test
      APP_HOST: analytics-service
      APP_PORT: 8001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_GATEWAY_NAME: dashboard
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - analytics-service
    ports:
      - '8081:8080'
