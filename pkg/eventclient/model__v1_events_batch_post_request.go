/*
Access Event Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1EventsBatchPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EventsBatchPostRequest{}

// V1EventsBatchPostRequest struct for V1EventsBatchPostRequest
type V1EventsBatchPostRequest struct {
	Events []AccessEvent `json:"events,omitempty"`
}

// NewV1EventsBatchPostRequest instantiates a new V1EventsBatchPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EventsBatchPostRequest() *V1EventsBatchPostRequest {
	this := V1EventsBatchPostRequest{}
	return &this
}

// NewV1EventsBatchPostRequestWithDefaults instantiates a new V1EventsBatchPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EventsBatchPostRequestWithDefaults() *V1EventsBatchPostRequest {
	this := V1EventsBatchPostRequest{}
	return &this
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *V1EventsBatchPostRequest) GetEvents() []AccessEvent {
	if o == nil || IsNil(o.Events) {
		var ret []AccessEvent
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventsBatchPostRequest) GetEventsOk() ([]AccessEvent, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *V1EventsBatchPostRequest) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []AccessEvent and assigns it to the Events field.
func (o *V1EventsBatchPostRequest) SetEvents(v []AccessEvent) {
	o.Events = v
}

func (o V1EventsBatchPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EventsBatchPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	return toSerialize, nil
}

type NullableV1EventsBatchPostRequest struct {
	value *V1EventsBatchPostRequest
	isSet bool
}

func (v NullableV1EventsBatchPostRequest) Get() *V1EventsBatchPostRequest {
	return v.value
}

func (v *NullableV1EventsBatchPostRequest) Set(val *V1EventsBatchPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EventsBatchPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EventsBatchPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EventsBatchPostRequest(val *V1EventsBatchPostRequest) *NullableV1EventsBatchPostRequest {
	return &NullableV1EventsBatchPostRequest{value: val, isSet: true}
}

func (v NullableV1EventsBatchPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EventsBatchPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


