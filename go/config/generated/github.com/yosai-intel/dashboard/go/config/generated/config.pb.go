// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: protobuf/config/schema/config.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Debug       bool   `protobuf:"varint,2,opt,name=debug,proto3" json:"debug,omitempty"`
	Host        string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port        int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	SecretKey   string `protobuf:"bytes,5,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	Environment string `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *AppConfig) Reset() {
	*x = AppConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_config_schema_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConfig) ProtoMessage() {}

func (x *AppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_config_schema_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConfig.ProtoReflect.Descriptor instead.
func (*AppConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_config_schema_config_proto_rawDescGZIP(), []int{0}
}

func (x *AppConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AppConfig) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *AppConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AppConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *AppConfig) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *AppConfig) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type DatabaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Host                   string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port                   int32  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Name                   string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	User                   string `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Password               string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Url                    string `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	ConnectionTimeout      int32  `protobuf:"varint,8,opt,name=connection_timeout,json=connectionTimeout,proto3" json:"connection_timeout,omitempty"`
	InitialPoolSize        int32  `protobuf:"varint,9,opt,name=initial_pool_size,json=initialPoolSize,proto3" json:"initial_pool_size,omitempty"`
	MaxPoolSize            int32  `protobuf:"varint,10,opt,name=max_pool_size,json=maxPoolSize,proto3" json:"max_pool_size,omitempty"`
	AsyncPoolMinSize       int32  `protobuf:"varint,11,opt,name=async_pool_min_size,json=asyncPoolMinSize,proto3" json:"async_pool_min_size,omitempty"`
	AsyncPoolMaxSize       int32  `protobuf:"varint,12,opt,name=async_pool_max_size,json=asyncPoolMaxSize,proto3" json:"async_pool_max_size,omitempty"`
	AsyncConnectionTimeout int32  `protobuf:"varint,13,opt,name=async_connection_timeout,json=asyncConnectionTimeout,proto3" json:"async_connection_timeout,omitempty"`
	ShrinkTimeout          int32  `protobuf:"varint,14,opt,name=shrink_timeout,json=shrinkTimeout,proto3" json:"shrink_timeout,omitempty"`
	UseIntelligentPool     bool   `protobuf:"varint,15,opt,name=use_intelligent_pool,json=useIntelligentPool,proto3" json:"use_intelligent_pool,omitempty"`
}

func (x *DatabaseConfig) Reset() {
	*x = DatabaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_config_schema_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseConfig) ProtoMessage() {}

func (x *DatabaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_config_schema_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseConfig.ProtoReflect.Descriptor instead.
func (*DatabaseConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_config_schema_config_proto_rawDescGZIP(), []int{1}
}

func (x *DatabaseConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DatabaseConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DatabaseConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DatabaseConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DatabaseConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DatabaseConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DatabaseConfig) GetConnectionTimeout() int32 {
	if x != nil {
		return x.ConnectionTimeout
	}
	return 0
}

func (x *DatabaseConfig) GetInitialPoolSize() int32 {
	if x != nil {
		return x.InitialPoolSize
	}
	return 0
}

func (x *DatabaseConfig) GetMaxPoolSize() int32 {
	if x != nil {
		return x.MaxPoolSize
	}
	return 0
}

func (x *DatabaseConfig) GetAsyncPoolMinSize() int32 {
	if x != nil {
		return x.AsyncPoolMinSize
	}
	return 0
}

func (x *DatabaseConfig) GetAsyncPoolMaxSize() int32 {
	if x != nil {
		return x.AsyncPoolMaxSize
	}
	return 0
}

func (x *DatabaseConfig) GetAsyncConnectionTimeout() int32 {
	if x != nil {
		return x.AsyncConnectionTimeout
	}
	return 0
}

func (x *DatabaseConfig) GetShrinkTimeout() int32 {
	if x != nil {
		return x.ShrinkTimeout
	}
	return 0
}

func (x *DatabaseConfig) GetUseIntelligentPool() bool {
	if x != nil {
		return x.UseIntelligentPool
	}
	return false
}

type SecurityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretKey            string           `protobuf:"bytes,1,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	SessionTimeout       int32            `protobuf:"varint,2,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`
	SessionTimeoutByRole map[string]int32 `protobuf:"bytes,3,rep,name=session_timeout_by_role,json=sessionTimeoutByRole,proto3" json:"session_timeout_by_role,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CorsOrigins          []string         `protobuf:"bytes,4,rep,name=cors_origins,json=corsOrigins,proto3" json:"cors_origins,omitempty"`
	CsrfEnabled          bool             `protobuf:"varint,5,opt,name=csrf_enabled,json=csrfEnabled,proto3" json:"csrf_enabled,omitempty"`
	MaxFailedAttempts    int32            `protobuf:"varint,6,opt,name=max_failed_attempts,json=maxFailedAttempts,proto3" json:"max_failed_attempts,omitempty"`
	MaxUploadMb          int32            `protobuf:"varint,7,opt,name=max_upload_mb,json=maxUploadMb,proto3" json:"max_upload_mb,omitempty"`
	AllowedFileTypes     []string         `protobuf:"bytes,8,rep,name=allowed_file_types,json=allowedFileTypes,proto3" json:"allowed_file_types,omitempty"`
}

func (x *SecurityConfig) Reset() {
	*x = SecurityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_config_schema_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityConfig) ProtoMessage() {}

func (x *SecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_config_schema_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityConfig.ProtoReflect.Descriptor instead.
func (*SecurityConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_config_schema_config_proto_rawDescGZIP(), []int{2}
}

func (x *SecurityConfig) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *SecurityConfig) GetSessionTimeout() int32 {
	if x != nil {
		return x.SessionTimeout
	}
	return 0
}

func (x *SecurityConfig) GetSessionTimeoutByRole() map[string]int32 {
	if x != nil {
		return x.SessionTimeoutByRole
	}
	return nil
}

func (x *SecurityConfig) GetCorsOrigins() []string {
	if x != nil {
		return x.CorsOrigins
	}
	return nil
}

func (x *SecurityConfig) GetCsrfEnabled() bool {
	if x != nil {
		return x.CsrfEnabled
	}
	return false
}

func (x *SecurityConfig) GetMaxFailedAttempts() int32 {
	if x != nil {
		return x.MaxFailedAttempts
	}
	return 0
}

func (x *SecurityConfig) GetMaxUploadMb() int32 {
	if x != nil {
		return x.MaxUploadMb
	}
	return 0
}

func (x *SecurityConfig) GetAllowedFileTypes() []string {
	if x != nil {
		return x.AllowedFileTypes
	}
	return nil
}

type YosaiConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App         *AppConfig      `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Database    *DatabaseConfig `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	Security    *SecurityConfig `protobuf:"bytes,3,opt,name=security,proto3" json:"security,omitempty"`
	Environment string          `protobuf:"bytes,4,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *YosaiConfig) Reset() {
	*x = YosaiConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_config_schema_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YosaiConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YosaiConfig) ProtoMessage() {}

func (x *YosaiConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_config_schema_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YosaiConfig.ProtoReflect.Descriptor instead.
func (*YosaiConfig) Descriptor() ([]byte, []int) {
	return file_protobuf_config_schema_config_proto_rawDescGZIP(), []int{3}
}

func (x *YosaiConfig) GetApp() *AppConfig {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *YosaiConfig) GetDatabase() *DatabaseConfig {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *YosaiConfig) GetSecurity() *SecurityConfig {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *YosaiConfig) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

var File_protobuf_config_schema_config_proto protoreflect.FileDescriptor

var file_protobuf_config_schema_config_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x92, 0x04, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2d, 0x0a, 0x12,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x50,
	0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6d, 0x61, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x61,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x50,
	0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x61, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f,
	0x6f, 0x6c, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x72, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x68, 0x72,
	0x69, 0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x22, 0xd9, 0x03, 0x0a,
	0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x6e, 0x0a, 0x17, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x14, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x73, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x72, 0x73, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x73,
	0x72, 0x66, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x63, 0x73, 0x72, 0x66, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6d, 0x62, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d,
	0x62, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a,
	0x47, 0x0a, 0x19, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd1, 0x01, 0x0a, 0x0b, 0x59, 0x6f, 0x73,
	0x61, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x03, 0x61, 0x70, 0x70, 0x12, 0x39, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x39, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x40, 0x5a, 0x3e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x6f, 0x73, 0x61, 0x69,
	0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x3b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_config_schema_config_proto_rawDescOnce sync.Once
	file_protobuf_config_schema_config_proto_rawDescData = file_protobuf_config_schema_config_proto_rawDesc
)

func file_protobuf_config_schema_config_proto_rawDescGZIP() []byte {
	file_protobuf_config_schema_config_proto_rawDescOnce.Do(func() {
		file_protobuf_config_schema_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_config_schema_config_proto_rawDescData)
	})
	return file_protobuf_config_schema_config_proto_rawDescData
}

var file_protobuf_config_schema_config_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_protobuf_config_schema_config_proto_goTypes = []interface{}{
	(*AppConfig)(nil),      // 0: config.schema.AppConfig
	(*DatabaseConfig)(nil), // 1: config.schema.DatabaseConfig
	(*SecurityConfig)(nil), // 2: config.schema.SecurityConfig
	(*YosaiConfig)(nil),    // 3: config.schema.YosaiConfig
	nil,                    // 4: config.schema.SecurityConfig.SessionTimeoutByRoleEntry
}
var file_protobuf_config_schema_config_proto_depIdxs = []int32{
	4, // 0: config.schema.SecurityConfig.session_timeout_by_role:type_name -> config.schema.SecurityConfig.SessionTimeoutByRoleEntry
	0, // 1: config.schema.YosaiConfig.app:type_name -> config.schema.AppConfig
	1, // 2: config.schema.YosaiConfig.database:type_name -> config.schema.DatabaseConfig
	2, // 3: config.schema.YosaiConfig.security:type_name -> config.schema.SecurityConfig
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_protobuf_config_schema_config_proto_init() }
func file_protobuf_config_schema_config_proto_init() {
	if File_protobuf_config_schema_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_config_schema_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_config_schema_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_config_schema_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_config_schema_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YosaiConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_config_schema_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_config_schema_config_proto_goTypes,
		DependencyIndexes: file_protobuf_config_schema_config_proto_depIdxs,
		MessageInfos:      file_protobuf_config_schema_config_proto_msgTypes,
	}.Build()
	File_protobuf_config_schema_config_proto = out.File
	file_protobuf_config_schema_config_proto_rawDesc = nil
	file_protobuf_config_schema_config_proto_goTypes = nil
	file_protobuf_config_schema_config_proto_depIdxs = nil
}
