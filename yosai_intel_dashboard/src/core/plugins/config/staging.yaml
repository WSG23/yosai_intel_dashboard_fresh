# config/environments/staging.yaml - Staging Environment Configuration
# Yōsai Intel Dashboard - Staging Environment
# 
# This configuration bridges development and production environments
# Features:
# - Environment variable substitution: ${VAR:default}
# - Production-like settings with debugging capabilities
# - Secure defaults with staging-appropriate timeouts
# - Comprehensive monitoring and health checks

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================
app:
  # Staging should be production-like but allow some debugging
  debug: ${DEBUG_MODE:false}
  host: ${HOST:0.0.0.0}
  port: ${PORT:8050}
  title: "Yōsai Intel Dashboard - Staging"
  timezone: ${TIMEZONE:UTC}
  log_level: ${LOG_LEVEL:INFO}
  enable_profiling: ${ENABLE_PROFILING:true}  # Enable for performance testing

# ============================================================================
# DATABASE CONFIGURATION  
# ============================================================================
database:
  # PostgreSQL configuration for staging environment
  type: postgresql
  host: ${DB_HOST:staging-db.internal}
  port: ${DB_PORT:5432}
  database: ${DB_NAME:yosai_staging}
  username: ${DB_USER:yosai_staging_user}
  password: ${DB_PASSWORD}  # Required environment variable
  
  # Connection pool settings - moderate for staging
  pool_size: ${DB_POOL_SIZE:8}
  ssl_mode: ${DB_SSL_MODE:require}
  connection_timeout: ${DB_TIMEOUT:30}
  retry_attempts: ${DB_RETRY_ATTEMPTS:3}
  
  # Staging-specific settings
  query_timeout: ${DB_QUERY_TIMEOUT:60}
  maintenance_window: ${DB_MAINTENANCE_WINDOW:"02:00-04:00"}

# ============================================================================
# CACHE CONFIGURATION
# ============================================================================
cache:
  # Redis configuration for staging
  type: redis
  host: ${REDIS_HOST:staging-redis.internal}
  port: ${REDIS_PORT:6379}
  database: ${REDIS_DB:1}  # Use separate DB from production
  password: ${REDIS_PASSWORD}  # Optional
  
  # Cache behavior
  timeout_seconds: ${CACHE_TIMEOUT:300}
  key_prefix: "yosai:staging:"
  compression_enabled: ${CACHE_COMPRESSION:true}
  max_memory_policy: ${REDIS_MAX_MEMORY_POLICY:allkeys-lru}
  
  # Connection settings
  socket_timeout: 30
  socket_connect_timeout: 30
  retry_on_timeout: true
  max_connections: ${REDIS_MAX_CONNECTIONS:20}

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================
security:
  # Authentication & Authorization
  secret_key: ${SECRET_KEY}  # Required environment variable
  session_timeout_minutes: ${SESSION_TIMEOUT:120}  # 2 hours for staging
  max_file_size_mb: ${MAX_FILE_SIZE:150}  # Slightly higher than prod
  
  # CORS Configuration
  cors_enabled: ${CORS_ENABLED:true}
  cors_origins:
    - ${FRONTEND_URL}
    - ${ADDITIONAL_CORS_ORIGIN}
  cors_methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  cors_headers:
    - Content-Type
    - Authorization
    - X-Requested-With
  
  # Rate Limiting - More permissive than production
  rate_limiting_enabled: ${RATE_LIMITING:true}
  rate_limit_per_minute: ${RATE_LIMIT_PER_MINUTE:300}
  rate_limit_burst: ${RATE_LIMIT_BURST:50}
  
  # Content Security Policy
  csp_enabled: ${CSP_ENABLED:true}
  csp_directives:
    default-src: "'self'"
    script-src: "'self' 'unsafe-inline' 'unsafe-eval'"
    style-src: "'self' 'unsafe-inline'"
    img-src: "'self' data: https:"
    connect-src: "'self' ${API_BASE_URL:https://staging-api.yourdomain.com}"

# ============================================================================
# ANALYTICS CONFIGURATION
# ============================================================================
analytics:
  # Query performance settings
  cache_timeout_seconds: ${ANALYTICS_CACHE_TIMEOUT:240}
  max_records_per_query: ${MAX_RECORDS_PER_QUERY:50000}  # Higher for testing
  query_timeout_seconds: ${ANALYTICS_QUERY_TIMEOUT:120}
  
  # Real-time features
  enable_real_time: ${ENABLE_REAL_TIME:true}
  real_time_interval_seconds: ${REAL_TIME_INTERVAL:30}
  websocket_enabled: ${WEBSOCKET_ENABLED:true}
  
  # Data processing
  batch_size: ${ANALYTICS_BATCH_SIZE:5000}
  parallel_processing: ${PARALLEL_PROCESSING:true}
  max_workers: ${MAX_WORKERS:4}
  
  # Advanced features for staging testing
  anomaly_detection_enabled: ${ANOMALY_DETECTION:true}
  machine_learning_enabled: ${ML_ENABLED:true}
  predictive_analytics: ${PREDICTIVE_ANALYTICS:false}  # Optional for staging
  
  # Data retention
  data_retention_days: ${DATA_RETENTION_DAYS:180}  # 6 months for staging
  archive_old_data: ${ARCHIVE_OLD_DATA:true}
  cleanup_interval_hours: ${CLEANUP_INTERVAL:24}

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================
monitoring:
  # Health checks
  health_check_enabled: ${HEALTH_CHECK_ENABLED:true}
  health_check_interval_seconds: ${HEALTH_CHECK_INTERVAL:60}
  health_check_timeout_seconds: ${HEALTH_CHECK_TIMEOUT:30}
  
  # Metrics collection
  metrics_enabled: ${METRICS_ENABLED:true}
  metrics_interval_seconds: ${METRICS_INTERVAL:30}
  custom_metrics_enabled: ${CUSTOM_METRICS:true}
  
  # Performance monitoring
  performance_monitoring: ${PERFORMANCE_MONITORING:true}
  slow_query_threshold_ms: ${SLOW_QUERY_THRESHOLD:1000}
  memory_usage_alerts: ${MEMORY_ALERTS:true}
  
  # Error reporting
  error_reporting_enabled: ${ERROR_REPORTING:true}
  sentry_dsn: ${SENTRY_DSN}  # Optional but recommended
  sentry_environment: staging
  sentry_sample_rate: ${SENTRY_SAMPLE_RATE:1.0}  # 100% for staging
  
  # Logging
  log_retention_days: ${LOG_RETENTION_DAYS:60}
  log_format: ${LOG_FORMAT:json}
  log_file_path: ${LOG_FILE_PATH:/var/log/yosai/staging.log}
  
  # Alerting
  alerting_enabled: ${ALERTING_ENABLED:true}
  alert_webhooks:
    - ${SLACK_WEBHOOK_URL}
    - ${TEAMS_WEBHOOK_URL}
  
  # APM (Application Performance Monitoring)
  apm_enabled: ${APM_ENABLED:true}
  apm_service_name: yosai-dashboard-staging
  apm_environment: staging

# ============================================================================
# FEATURE FLAGS & EXPERIMENTAL FEATURES
# ============================================================================
features:
  # Staging is perfect for testing new features
  enable_experimental_features: ${EXPERIMENTAL_FEATURES:true}
  enable_beta_ui: ${BETA_UI:true}
  enable_advanced_charts: ${ADVANCED_CHARTS:true}
  enable_data_export: ${DATA_EXPORT:true}
  enable_user_preferences: ${USER_PREFERENCES:true}
  
  # API features
  enable_api_v2: ${API_V2_ENABLED:true}
  enable_graphql: ${GRAPHQL_ENABLED:false}
  enable_rest_api: ${REST_API_ENABLED:true}
  
  # Integration features
  enable_sso: ${SSO_ENABLED:false}
  enable_ldap: ${LDAP_ENABLED:false}
  enable_oauth: ${OAUTH_ENABLED:true}

# ============================================================================
# EXTERNAL INTEGRATIONS
# ============================================================================
integrations:
  # Email notifications
  email:
    enabled: ${EMAIL_ENABLED:true}
    smtp_host: ${SMTP_HOST:smtp.staging.yourdomain.com}
    smtp_port: ${SMTP_PORT:587}
    smtp_username: ${SMTP_USERNAME}
    smtp_password: ${SMTP_PASSWORD}
    smtp_use_tls: ${SMTP_USE_TLS:true}
    from_address: ${FROM_EMAIL:noreply@staging.yourdomain.com}
  
  # Message queues
  message_queue:
    enabled: ${QUEUE_ENABLED:true}
    type: ${QUEUE_TYPE:redis}
    broker_url: ${BROKER_URL:redis://staging-redis.internal:6379/2}
    result_backend: ${RESULT_BACKEND:redis://staging-redis.internal:6379/3}
    
  # External APIs
  external_apis:
    threat_intelligence:
      enabled: ${THREAT_INTEL_ENABLED:true}
      api_key: ${THREAT_INTEL_API_KEY}
      base_url: ${THREAT_INTEL_BASE_URL:https://api.threatintel.staging}
      timeout_seconds: ${THREAT_INTEL_TIMEOUT:30}
    
    geolocation:
      enabled: ${GEO_ENABLED:true}
      api_key: ${GEO_API_KEY}
      base_url: ${GEO_BASE_URL:https://api.ipgeolocation.staging}

# ============================================================================
# RESOURCE LIMITS & SCALING
# ============================================================================
resources:
  # Memory limits
  max_memory_mb: ${MAX_MEMORY:4096}  # 4GB
  memory_warning_threshold: ${MEMORY_WARNING_THRESHOLD:0.8}  # 80%
  
  # CPU limits
  max_cpu_cores: ${MAX_CPU_CORES:4}
  cpu_warning_threshold: ${CPU_WARNING_THRESHOLD:0.7}  # 70%
  
  # Disk limits
  max_disk_usage_gb: ${MAX_DISK_USAGE:100}  # 100GB
  disk_warning_threshold: ${DISK_WARNING_THRESHOLD:0.8}  # 80%
  
  # Scaling configuration
  auto_scaling_enabled: ${AUTO_SCALING:false}  # Manual scaling for staging
  min_instances: ${MIN_INSTANCES:1}
  max_instances: ${MAX_INSTANCES:3}
  scale_up_threshold: ${SCALE_UP_THRESHOLD:0.8}
  scale_down_threshold: ${SCALE_DOWN_THRESHOLD:0.3}