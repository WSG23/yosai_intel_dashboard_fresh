version: '3.8'

services:

  service-registry:
    image: consul:1.15
    command: consul agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
    restart: unless-stopped

  analytics-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "-m", "uvicorn", "services.analytics_microservice.app:app", "--host", "0.0.0.0", "--port", "8001"]
    environment:
      YOSAI_ENV: production
      SERVICE_REGISTRY_URL: http://service-registry:8500
    depends_on:
      - service-registry
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "8081:8080"
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8080"
      - "prometheus.path=/metrics"
    environment:
      SERVICE_REGISTRY_URL: http://service-registry:8500
    depends_on:
      - analytics-service
      - service-registry
    restart: unless-stopped
  nginx:
    image: nginx:1.25
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api-gateway
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: yosai_intel
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/database_setup.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  certs:
